name: Deploy to AWS

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository in format owner/repo"
        required: true
        type: string
      refspec:
        description: "Commit ref"
        required: true
        type: string
      docker_tag:
        description: "Commit short SHA"
        required: true
        type: string
      env_name:
        required: true
        type: string
      domain:
        required: true
        type: string

jobs:
  deploy_to_aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.refspec }}
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: "yarn"
          cache-dependency-path: infra/${{ inputs.env_name }}/package-lock.json
      # Update the pulumi stack with new image
      - run: |
          npm install
          pulumi stack select -c gitcoin/dpopp/${{ inputs.env_name }}
          pulumi config -s gitcoin/dpopp/${{ inputs.env_name }} set aws:region us-east-1 --non-interactive
        working-directory: infra/${{ inputs.env_name }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
            # - uses: pulumi/actions@v3
            #   id: pulumi
            #   with:
            #     command: up
            #     stack-name: gitcoin/dpopp/${{ inputs.env_name }}
            #     upsert: false
            #     work-dir: infra/${{ inputs.env_name }}
            #   env:
      - name: echo
        run: |
          echo PULUMI_ACCESS_TOKEN: $PULUMI_ACCESS_TOKEN
          echo AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
          echo AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
          echo DOCKER_GTC_PASSPORT_IAM_IMAGE: $ECR_URL:${{ inputs.docker_tag }}
          echo ROUTE_53_ZONE: $ROUTE53_ZONE_ID
          echo DOMAIN: ${{ inputs.domain }}
          echo IAM_SERVER_SSM_ARN: $IAM_SERVER_SSM_ARN
