name: Release and Deploy

on:
  workflow_call:
    inputs:
      refspec: 
        required: true
        type: string
      repo_owner:
        required: true
        type: string
      repo_name:
        required: true
        type: string
      staging_frontend_branch:
        required: true
        type: string
      production_frontend_branch:
        required: true
        type: string
      staging_domain: 
        required: true
        type: string
      production_domain:
        required: true
        type: string
      ecr_repository:
        required: true
        type: string

jobs:
  test:
    name: Test
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo_owner }}/${{ inputs.repo_name }}
          ref: ${{ inputs.refspec }}
          fetch-depth: 0

      - name: Version
        # https://github.com/marketplace/actions/git-semantic-version
        id: version
        uses: paulhatch/semantic-version@v5.0.2
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"

      - name: Release
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          allowUpdates: true
          token: ${{ secrets.github_token }}
          tag: ${{ steps.version.outputs.version_tag }}
          commit: ${{ inputs.refspec }}
          draft: true

      - name: Store Commit SHA
        id: sha
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short ${{ inputs.refspec }})" >> $GITHUB_OUTPUT

    outputs:
      version_tag: ${{ steps.version.outputs.version_tag }}
      commit_sha: ${{ steps.sha.outputs.sha_short }}

  wait_for_production_approval:
    name: Production Approval Pending
    needs: [test]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Approve Release to Production
        run: |
          echo "Approved Production Release for: " ${{ needs.test.outputs.version_tag }}
          echo "Ref" ${{ inputs.refspec }}

  release:
    name: Release
    needs: [wait_for_production_approval,test]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo_owner }}/${{ inputs.repo_name }}
          ref: ${{ inputs.refspec }}
          fetch-depth: 0

      - name: Release
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          token: ${{ secrets.github_token }}
          tag: ${{ needs.test.outputs.version_tag }}
          commit: ${{ inputs.refspec }}
          draft: false
