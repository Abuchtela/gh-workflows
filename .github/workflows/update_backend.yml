name: Deploy IAM Server to Production

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "Repository in format owner/repo"
        required: true
        type: string
      commitish:
        description: "Commit ref"
        required: true
        type: string

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.commitish }}

      - name: Store Commit SHA
        id: vars
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PRODUCTION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRODUCTION }}
          aws-region: us-east-1

      # login to docker for AWS
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # build, tag, and push to ECR
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: passport
          IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f iam/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    outputs:
      dockerTag: ${{ steps.vars.outputs.sha_short }}

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: "yarn"
          cache-dependency-path: infra/production/package-lock.json
      # Update the pulumi stack with new image
      - run: |
          npm install
          pulumi stack select -c gitcoin/dpopp/production
          pulumi config -s gitcoin/dpopp/production set aws:region us-east-1 --non-interactive
        working-directory: infra/production
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - uses: pulumi/actions@v3
        id: pulumi
        with:
          command: up
          stack-name: gitcoin/dpopp/production
          upsert: false
          work-dir: infra/production
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PRODUCTION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRODUCTION }}
          DOCKER_GTC_PASSPORT_IAM_IMAGE: ${{secrets.ECR_URL_PRODUCTION}}:${{ needs.build-and-test.outputs.dockerTag }}
          ROUTE_53_ZONE: ${{ secrets.ROUTE53_ZONE_ID_PRODUCTION }}
          DOMAIN: passport-iam.gitcoin.co
          IAM_SERVER_SSM_ARN: ${{ secrets.IAM_SERVER_SSM_ARN_PRODUCTION }}
